#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

# Needed for helper "ynh_add_nginx_config"
final_path=$(ynh_app_setting_get --app=$app --key=final_path)

# Add settings here as needed by your application
db_name=$(ynh_app_setting_get --app=$app --key=db_name)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before changing its url (may take a while)..." --weight=4

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
    # Remove the new domain config file, the remove script won't do it as it doesn't know yet its location.
    ynh_secure_remove --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"

    # restore it if the upgrade fails
    ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
    change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
    change_path=1
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# MODIFY URL IN NGINX CONF
#=================================================
ynh_script_progression --message="Updating nginx web server configuration..." --weight=2

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
    # Make a backup of the original nginx config file if modified
    ynh_backup_if_checksum_is_different --file="$nginx_conf_path"
    # Set global variables for nginx helper
    domain="$old_domain"
    path_url="$new_path"
    # Create a dedicated nginx config
    ynh_add_nginx_config
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
    # Delete file checksum for the old conf file location
    ynh_delete_file_checksum --file="$nginx_conf_path"
    mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
    # Store file checksum for the new config file location
    ynh_store_file_checksum --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================
# UPDATE THE DATABASE
#=================================================
ynh_script_progression --message="Updating database..."

new_index_url="${new_path%/}/index.php"
new_public_url="${new_path%/}/public"
new_themes_url="${new_path%/}/themes"

ynh_mysql_execute_as_root --sql="UPDATE dc_blog SET blog_url='https://$new_domain$new_index_url?' WHERE dc_blog.blog_id='default'" --database=$db_name
ynh_mysql_execute_as_root --sql="UPDATE dc_setting SET setting_value='$new_public_url' WHERE dc_setting.setting_id='public_url'" --database=$db_name
ynh_mysql_execute_as_root --sql="UPDATE dc_setting SET setting_value='$new_themes_url' WHERE dc_setting.setting_id='themes_url'" --database=$db_name

#=================================================
# UPDATE CONFIGURATION
#=================================================
ynh_script_progression --message="Updating configuration file..."

php_config=$final_path/inc/config.php

ynh_backup_if_checksum_is_different --file="$php_config"

new_admin_url="${new_path%/}/admin/index.php"
old_admin_url="${old_path%/}/admin/index.php"
ynh_replace_string --match_string="'DC_ADMIN_URL', 'https://$old_domain$old_admin_url'" --replace_string="'DC_ADMIN_URL', 'https://$new_domain$new_admin_url'" --target_file=$php_config

ynh_store_file_checksum --file="$php_config"

#=================================================
# GENERIC FINALISATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Change of URL completed for $app" --last
